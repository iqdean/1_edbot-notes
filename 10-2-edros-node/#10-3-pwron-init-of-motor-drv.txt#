
NOTE:

The general one-line formula to linearly rescale data values having observed 
min and max into a new arbitrary range min' to max' is

  newvalue= (max'-min')/(max-min)*(value-max)+max'
  or
  newvalue= (max'-min')/(max-min)*(value-min)+min'.

Joystick Node  (nodejs + rosbridge)
--------------
1. @ 15Hz, Read joystick inputs for 
           CV
	   CAV

2. normalize joystick inputs b/t -1 & 1


3.  scale joystick inputs
                             m/s           rad/sec
         FROM         TO:    CV      &     CAV 
         min max          min' max'     min'  max'
        -1    1           -.5  +5       -1    +1 
                                         
4. publish resulting CV / CAV in /cmd_vel twist message



Robot Base Controller diffdrv Node
-----------------------------

@ edison boot in init scripts
0. run cfgttyMFD1.sh to setp edison gpio mux's to use ttyMFD1

@ Node start up

1. Initialize Kangroo Motion Controller

'd,start/r/n'
't,start/r/n'
'd,s0/r/n'
't,s0/r/n'
'd,units 779 mm = 1024 lines/r/n'
't,units 360 degrees = 1891 lines/r/n'

2. subscribe to /cmd_vel msg and process ea rcvd msg 

2.1 scales CV/CAS from /cmd_vel

           m/s           rad/sec
            CV      &     CAV 
         min' max'     min'  max'
FROM:   -.5  +.5       -2    +2 
          x1000          x57.29
TO:    -500  +500    -114    +114
          mm/s          deg/s

2.2 reformat and transmit to Kangaroo Motion Controller

'd,s<CV>/r/n'   where <CV>  = scaled CV val in mm/s
't,s<CAV>/r/n'  where <CAV> = scaled CAV val in deg/s 


-----------------------------------------------------------------------------

CV

                                                               ROS Nav Stack
 Max Rev          0        Max Fwd                             native units
                                                               |
-500 mm/s         0        +500 mm/s      <  CV mm/s = 1000*CV m/s
- .5  m/s   -.125   +.125  + .5  m/s	  <  initial dynamic range of CV 
              |deadzone|


CAV

Max Left           0        Max Right
 180          +30     -30     -180    deg/sec  CAV deg/s = 57.2958 * CAV rad/s
 3.14         .525   -.525    +3.14   rad/sec               deg/s
              |deadzone|



iqdean@ubilinux:~/motors$ sudo ./cfgttyMFD1.sh 

iqdean@ubilinux:~/motors$ python 7-4a-edpyserial.py 
Opening Uart(0): /dev/ttyMFD1
Enter your commands below.
Insert "exit" to leave the application.
21:43:52>> d, start
21:43:58>> t, start
21:44:03>> d, s0
21:44:06>> t, s0
21:44:09>> d, getp
21:44:13>> D,P0

21:44:13>> t, getp
21:44:19>> T,P0

21:44:19>> d, units 779 mm = 1024 lines
21:45:17>> t, units 360 degrees = 1891 lines
                    
                                                                                       ROS Nav Stack
	      	    	 Max Rev          0        Max Fwd                             native units
21:45:36>> d, s125      -500 mm/s         0        +500 mm/s      <  CV mm/s = 1000*CV m/s
21:46:00>> d, s250      - .5  m/s   -.125   +.125  + .5  m/s	  <  initial dynamic range of CV 
21:46:07>> d, s500                    | dead |
21:46:14>> d, s250                      zone
21:46:21>> d, s125
21:46:26>> d, s0
21:46:29>> d, s-125
															                                          21:46:39>> d, s-250
21:46:46>> d, s-300
21:46:56>> d, s-400
21:47:01>> d, s-500
21:47:07>> d, s-400
21:47:17>> d, s-300
21:47:22>> d, s-200
21:47:27>> d, s-125
21:47:31>> d, s0

	       Deg/s = rad/s * 57.2958 deg/rad 
22:13:25>> t, s0       0.0
22:13:27>> t, s20      0.35
              s30      0.525
22:19:00>> t, s40      0.7
22:19:04>> t, s60
22:19:09>> t, s80
22:19:13>> t, s100
22:19:17>> t, s120
22:19:25>> t, s140
22:19:32>> t, s180      3.14
22:19:35>> t, s140
22:19:40>> t, s120
22:19:50>> t, s100
22:19:53>> t, s80
22:20:00>> t, s40
22:20:06>> t, s0
22:20:09>> t, s-20
22:20:20>> t, s-40
22:20:27>> t, s-60
22:20:31>> t, s-80
22:20:35>> t, s-100
22:20:40>> t, s-120
22:20:45>> t, s-140
22:20:55>> t, s-160
22:21:06>> t, s-120
22:21:15>> t, s-100
22:21:19>> t, s-60
22:21:27>> t, s0  

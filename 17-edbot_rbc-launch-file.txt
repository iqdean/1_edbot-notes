---- BKM edbot rbc startup: ------
edbot/launch/edbot_rbc.launch
----------------------------------
<!--
Launch edbot robot base controller

You have to be root to run this launch file due to libmraa permissions issue:
$ roscd edbot/src
$ sudo /bin/bash
$ source startOdomAsRoot
$ roslaunch edbot edbot_rbc.launch

edbot_rbc.launch file will start:
a) roscore
b) rosbridge_websocket       include rosbridge_websocket.launch
c) load edbot robot param    include robot_param.launch
d) edbot odometriclocalizer  rds wheel encoders & publishes odometry
   timed_roslaunch.sh        waits 4 sec to make sure odometriclocalizer is up
                             & then launches diffdev node
e) edbot diffdrv             subcribes to /cmd_vel & drives motors using motion controller
-->

<launch>
	<include file="$(find edbot)/launch/robot_params.launch" />	
	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />
	<node name="edbotodom" pkg="edbot" type="odometriclocalizer.py" />
	<node name="timed_roslaunch" pkg="edbot" type="timed_roslaunch.sh" args="4 edbot diffdrv1.launch" output="screen" />
</launch>













NOTES BEYOND HERE:
-----------------------------------------------------------------------------------

iqdean@ubilinux:~$ roscd edbot/src
iqdean@ubilinux:~/catkin_ws/src/edbot/src$ sudo /bin/bash
[sudo] password for iqdean: 
root@ubilinux:/home/iqdean/catkin_ws/src/edbot/src# source startOdomAsRoot 
root@ubilinux:/home/iqdean/catkin_ws/src/edbot/src# roslaunch edbot edbot_rbc.launch 
... logging to /root/.ros/log/ba2ee838-8065-11e6-a27d-784b87a69877/roslaunch-ubilinux-2593.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:38188/

SUMMARY
========

PARAMETERS
 * /edbot/enc_cpr: 4096
 * /edbot/track_width: 0.468
 * /edbot/wheel_dia: 0.2626
 * /rosbridge_websocket/address: 
 * /rosbridge_websocket/authenticate: False
 * /rosbridge_websocket/delay_between_messages: 0
 * /rosbridge_websocket/fragment_timeout: 600
 * /rosbridge_websocket/max_message_size: None
 * /rosbridge_websocket/port: 9090
 * /rosbridge_websocket/retry_startup_delay: 5
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES
  /
    diffdrv (edbot/diffdrv.py)
    edbotodom (edbot/odometriclocalizer.py)
    rosapi (rosapi/rosapi_node)
    rosbridge_websocket (rosbridge_server/rosbridge_websocket)

auto-starting new master
process[master]: started with pid [2606]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to ba2ee838-8065-11e6-a27d-784b87a69877
process[rosout-1]: started with pid [2619]
started core service [/rosout]
process[rosbridge_websocket-2]: started with pid [2636]
process[rosapi-3]: started with pid [2637]
process[edbotodom-4]: started with pid [2638]
process[diffdrv-5]: started with pid [2639]
the rosdep view is empty: call 'sudo rosdep init' and 'rosdep update'
registered capabilities (classes):
 - rosbridge_library.capabilities.call_service.CallService
 - rosbridge_library.capabilities.advertise.Advertise
 - rosbridge_library.capabilities.publish.Publish
 - rosbridge_library.capabilities.subscribe.Subscribe
 - <class 'rosbridge_library.capabilities.defragmentation.Defragment'>
 - rosbridge_library.capabilities.advertise_service.AdvertiseService
 - rosbridge_library.capabilities.service_response.ServiceResponse
 - rosbridge_library.capabilities.unadvertise_service.UnadvertiseService
[INFO] [WallTime: 1474508519.999933] Rosbridge WebSocket server started on port 9090

--- kewl, looks like edbot_rbc.launch file works !!! ----
but edbot wont respond to /cmd_vel ???

>> hmm, looks like the diffdrv.py node started BEFORE the odometriclocalizer.py node

http://answers.ros.org/question/10612/pausing-inside-launch-file/
You cannot be sure that nodes are really launched serially. See the roslaunch XML documentation. 
However, if you really want to start nodes serially, in particular if it is something like 
killing/spawning controllers, why don't you put them into a shell script and execute the 
script from roslaunch?

http://answers.ros.org/question/51474/can-i-run-a-bash-script-using-roslaunch/

This script can delay the launch of a roslaunch file
Place it in the 'scripts' folder of your catkin package
and make sure that the file is executable (chmod +x timed_roslaunch.sh)

Run it from command line:

Use: ./timed_roslaunch.sh [number of seconds to delay] [rospkg] [roslaunch file] [arguments (optional)]
Or: rosrun [yourpackage] time_roslaunch.sh [number of seconds to delay] [rospkg] [roslaunch file] [arguments (optional)]
Example: ./timed_roslaunch.sh 2 turtlebot_navigation amcl_demo.launch initial_pose_x:=17.0 initial_pose_y:=17.0

Or run it from another roslaunch file:

<launch>
<arg name="initial_pose_y" default="17.0" />
  <node pkg="semantic_turtle_test" type="timed_roslaunch.sh" 
    args="2 turtlebot_navigation amcl_demo.launch initial_pose_x:=17.0 initial_pose_y:=$(arg initial_pose_y)" 
    name="timed_roslaunch" output="screen">
  </node>
</launch>

#!/bin/bash          
#
# Script to delay the launch of a roslaunch file
# 
# Koen Lekkerkerker
# Thu 24 Apr 2014 
#
# Use: ./timed_roslaunch.sh [number of seconds to delay] [rospkg] [roslaunch file]
#

function showHelp(){
    echo 
    echo "This script can delay the launch of a roslaunch file"
    echo "Place it in the 'scripts' folder of your catkin package"
    echo "and make sure that the file is executable (chmod +x timed_roslaunch.sh)"
    echo 
    echo "Run it from command line:"
    echo 
    echo "Use: ./timed_roslaunch.sh [number of seconds to delay] [rospkg] [roslaunch file] [arguments (optional)]"
    echo "Or: rosrun [yourpackage] time_roslaunch.sh [number of seconds to delay] [rospkg] [roslaunch file] [arguments (optional)]"
    echo "Example: ./timed_roslaunch.sh 2 turtlebot_navigation amcl_demo.launch initial_pose_x:=17.0 initial_pose_y:=17.0"
    echo 
    echo "Or run it from another roslaunch file:"
    echo 
    echo '<launch>'
    echo '  <arg name="initial_pose_y" default="17.0" />'
    echo '  <node pkg="semantic_turtle_test" type="timed_roslaunch.sh"'
    echo '    args="2 turtlebot_navigation amcl_demo.launch initial_pose_x:=17.0 initial_pose_y:=$(arg initial_pose_y)"'
    echo '    name="timed_roslaunch" output="screen">'
    echo '  </node>'
    echo '</launch>'
}

if [ "$1" = "-h" ]; then
    showHelp
else 
    echo "start wait for $1 seconds"
    sleep $1
    echo "end wait for $1 seconds"
    shift
        echo "now running 'roslaunch $@'"
    roslaunch $@
fi

------
$ chmod +x timed_roslaunch.sh


----- 1st form ---- ok

iqdean@ubilinux:~/catkin_ws/src/edbot/scripts$ ./timed_roslaunch.sh 5 edbot robot_params.launch
start wait for 5 seconds
end wait for 5 seconds
now running 'roslaunch edbot robot_params.launch'
... logging to /home/iqdean/.ros/log/5a220922-8072-11e6-af45-784b87a69877/roslaunch-ubilinux-3156.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:36448/

SUMMARY
========

PARAMETERS
 * /edbot/enc_cpr: 4096
 * /edbot/track_width: 0.468
 * /edbot/wheel_dia: 0.2626
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES

auto-starting new master
process[master]: started with pid [3169]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 5a220922-8072-11e6-af45-784b87a69877
process[rosout-1]: started with pid [3182]
started core service [/rosout]

---- 2nd form ----- ok

iqdean@ubilinux:~$ rosrun edbot timed_roslaunch.sh 4 edbot robot_params.launch
start wait for 4 seconds
end wait for 4 seconds
now running 'roslaunch edbot robot_params.launch'
... logging to /home/iqdean/.ros/log/8a63ac5c-8073-11e6-9f40-784b87a69877/roslaunch-ubilinux-3257.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:41840/

SUMMARY
========

PARAMETERS
 * /edbot/enc_cpr: 4096
 * /edbot/track_width: 0.468
 * /edbot/wheel_dia: 0.2626
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES

auto-starting new master
process[master]: started with pid [3270]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 8a63ac5c-8073-11e6-9f40-784b87a69877
process[rosout-1]: started with pid [3283]
started core service [/rosout]


--- 3rd form: 

<launch>
<arg name="initial_pose_y" default="17.0" />
  <node pkg="semantic_turtle_test" type="timed_roslaunch.sh" 
    args="2 turtlebot_navigation amcl_demo.launch initial_pose_x:=17.0 initial_pose_y:=$(arg initial_pose_y)" 
    name="timed_roslaunch" output="screen">
  </node>
</launch>

---

iqdean@ubilinux:~/catkin_ws/src/edbot/launch$ cat test_timed.launch 

<launch>
  <node name="timed_roslaunch" pkg="edbot" type="timed_roslaunch.sh" args="4 edbot robot_params.launch" output="screen" />
</launch>

-------------------------------------------------------------

iqdean@ubilinux:~$ roslaunch edbot test_timed.launch 
... logging to /home/iqdean/.ros/log/63ff3f82-8077-11e6-972b-784b87a69877/roslaunch-ubilinux-3942.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:45472/

SUMMARY
========

PARAMETERS
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES
  /
    timed_roslaunch (edbot/timed_roslaunch.sh)

auto-starting new master
process[master]: started with pid [3955]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 63ff3f82-8077-11e6-972b-784b87a69877
process[rosout-1]: started with pid [3968]
started core service [/rosout]
process[timed_roslaunch-2]: started with pid [3971]
start wait for 4 seconds
end wait for 4 seconds
now running 'roslaunch edbot robot_params.launch __name:=timed_roslaunch __log:=/home/iqdean/.ros/log/63ff3f82-8077-11e6-972b-784b87a69877/timed_roslaunch-2.log'
... logging to /home/iqdean/.ros/log/63ff3f82-8077-11e6-972b-784b87a69877/roslaunch-ubilinux-3987.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:38798/

SUMMARY
========

PARAMETERS
 * /edbot/enc_cpr: 4096
 * /edbot/track_width: 0.468
 * /edbot/wheel_dia: 0.2626
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES

ROS_MASTER_URI=http://localhost:11311

core service [/rosout] found
No processes to monitor
shutting down processing monitor...
... shutting down processing monitor complete
[timed_roslaunch-2] process has finished cleanly
log file: /home/iqdean/.ros/log/63ff3f82-8077-11e6-972b-784b87a69877/timed_roslaunch-2*.log

-----

iqdean@ubilinux:~$ rostopic list
/rosout
/rosout_agg
iqdean@ubilinux:~$ rosnode list
/rosout
iqdean@ubilinux:~$ rosparam list
/edbot/enc_cpr
/edbot/track_width
/edbot/wheel_dia
/rosdistro
/roslaunch/uris/host_192_168_2_15__38798
/roslaunch/uris/host_192_168_2_15__45472
/rosversion
/run_id

--- ok, timed_roslaunch.sh script works ----

a) create launch file to launch only diffdrv.py node:

iqdean@ubilinux:~/catkin_ws/src/edbot/launch$ cat diffdrv1.launch 

<launch>
	<node name="diffdrv" pkg="edbot" type="diffdrv.py" />
</launch>

b) --- update edbot_rbc.launch to add timed_roslaunch.sh to wait 4sec then launch diffdrv1.launch

iqdean@ubilinux:~/catkin_ws/src/edbot/launch$ cat edbot_rbc.launch 

<!--
Launch edbot robot base controller

You have to be root to run this launch file due to libmraa permissions issue:
$ roscd edbot/src
$ sudo /bin/bash
$ source startOdomAsRoot
$ roslaunch edbot edbot_rbc.launch

edbot_rbc.launch file will start:
a) roscore
b) rosbridge_websocket       include rosbridge_websocket.launch
c) load edbot robot param    include robot_param.launch
d) edbot odometriclocalizer  rds wheel encoders & publishes odometry
   timed_roslaunch.sh        waits 4 sec to make sure odometriclocalizer is up
                             & then launches diffdev node
e) edbot diffdrv             subcribes to /cmd_vel & drives motors using motion controller
-->

<launch>
	<include file="$(find edbot)/launch/robot_params.launch" />	
	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />
	<node name="edbotodom" pkg="edbot" type="odometriclocalizer.py" />
	<node name="timed_roslaunch" pkg="edbot" type="timed_roslaunch.sh" args="4 edbot diffdrv1.launch" output="screen" />
</launch>


---- see if edbot_rbc.lauch file works ???  -----

root@ubilinux:/home/iqdean/catkin_ws/src/edbot/src# roslaunch edbot edbot_rbc.launch
... logging to /root/.ros/log/6123ea1e-8087-11e6-a27d-784b87a69877/roslaunch-ubilinux-4202.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:60765/

SUMMARY
========

PARAMETERS
 * /edbot/enc_cpr: 4096
 * /edbot/track_width: 0.468
 * /edbot/wheel_dia: 0.2626
 * /rosbridge_websocket/address: 
 * /rosbridge_websocket/authenticate: False
 * /rosbridge_websocket/delay_between_messages: 0
 * /rosbridge_websocket/fragment_timeout: 600
 * /rosbridge_websocket/max_message_size: None
 * /rosbridge_websocket/port: 9090
 * /rosbridge_websocket/retry_startup_delay: 5
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES
  /
    edbotodom (edbot/odometriclocalizer.py)
    rosapi (rosapi/rosapi_node)
    rosbridge_websocket (rosbridge_server/rosbridge_websocket)
    timed_roslaunch (edbot/timed_roslaunch.sh)

auto-starting new master
process[master]: started with pid [4215]
ROS_MASTER_URI=http://localhost:11311

setting /run_id to 6123ea1e-8087-11e6-a27d-784b87a69877
process[rosout-1]: started with pid [4228]
started core service [/rosout]
process[rosbridge_websocket-2]: started with pid [4238]
process[rosapi-3]: started with pid [4246]
process[edbotodom-4]: started with pid [4247]
process[timed_roslaunch-5]: started with pid [4248]
start wait for 4 seconds
the rosdep view is empty: call 'sudo rosdep init' and 'rosdep update'
registered capabilities (classes):
 - rosbridge_library.capabilities.call_service.CallService
 - rosbridge_library.capabilities.advertise.Advertise
 - rosbridge_library.capabilities.publish.Publish
 - rosbridge_library.capabilities.subscribe.Subscribe
 - <class 'rosbridge_library.capabilities.defragmentation.Defragment'>
 - rosbridge_library.capabilities.advertise_service.AdvertiseService
 - rosbridge_library.capabilities.service_response.ServiceResponse
 - rosbridge_library.capabilities.unadvertise_service.UnadvertiseService
end wait for 4 seconds
now running 'roslaunch edbot diffdrv1.launch __name:=timed_roslaunch __log:=/root/.ros/log/6123ea1e-8087-11e6-a27d-784b87a69877/timed_roslaunch-5.log'
[INFO] [WallTime: 1474522972.619270] Rosbridge WebSocket server started on port 9090
... logging to /root/.ros/log/6123ea1e-8087-11e6-a27d-784b87a69877/roslaunch-ubilinux-4304.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.

started roslaunch server http://192.168.2.15:57725/

SUMMARY
========

PARAMETERS
 * /rosdistro: indigo
 * /rosversion: 1.11.20

NODES
  /
    diffdrv (edbot/diffdrv.py)

ROS_MASTER_URI=http://localhost:11311

core service [/rosout] found
process[diffdrv-1]: started with pid [4342]

---- start rqt and verify robot responds to /cmd_vel ---- 
WORKS NOW, so delaying the startup of diffdrv.py for 4 sec to allow
odometriclocalizer.py to up & running seems to work

---- start rviz 
Works

---- BKM edbot rbc startup: ------

<!--
Launch edbot robot base controller

You have to be root to run this launch file due to libmraa permissions issue:
$ roscd edbot/src
$ sudo /bin/bash
$ source startOdomAsRoot
$ roslaunch edbot edbot_rbc.launch

edbot_rbc.launch file will start:
a) roscore
b) rosbridge_websocket       include rosbridge_websocket.launch
c) load edbot robot param    include robot_param.launch
d) edbot odometriclocalizer  rds wheel encoders & publishes odometry
   timed_roslaunch.sh        waits 4 sec to make sure odometriclocalizer is up
                             & then launches diffdev node
e) edbot diffdrv             subcribes to /cmd_vel & drives motors using motion controller
-->

